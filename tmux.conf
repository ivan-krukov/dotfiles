# Prefix
set -g prefix C-x
unbind C-b
bind C-x send-prefix

# Base index is 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Delay
set -s escape-time 1

# Sourcing file
bind r source-file ~/.tmux.conf \; display "Reloaded!"
bind c new-window -c "#{pane_current_path}"

# Splitting
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# Navigation
## Panes
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
## Windows
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Pane resizing (-r means repeatable)
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5

bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g default-command "reattach-to-user-namespace -l /bin/zsh"

setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"


set -g mouse on

# Colors
set -g default-terminal "screen-256color"

# Status line config
## Colors
set -g status-style fg=black,bg=white
setw -g window-status-style fg=black,bg=white
setw -g window-status-current-style fg=black,bold,bg=white
set -g message-style fg=black,bg=white

## Content
set -g status-left-length 30
set -g status-left "[#S | #I | #P] "

set -g status-right-length 60
set -g status-right "[#h] %R %d %b" 
#set -g status-right 'mouse_any_flag:#{mouse_any_flag} pane_in_mode:#{pane_in_mode} alt:#{alternate_on}; #{?mouse_any_flag,1,#{alternate_on}}'

set -g status-justify centre

# No rename
set -g allow-rename off

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n MouseDown1Pane select-pane -t=\; send-keys -M
bind -n MouseUp1Pane send-keys -M

bind -n MouseDown1Status select-window -t =
bind -n MouseDown3Pane send-keys -M

# This does not refresh on-drag
bind -n MouseDrag1Pane send-keys -M
bind -n MouseDragEnd1Pane send-keys -M

bind -n MouseDrag1Border resize-pane -M

bind -n WheelUpPane select-pane -t=\; if -Ft= "#{?pane_in_mode,1,#{mouse_any_flag}}" "send-keys -M" "if -Ft= '#{alternate_on}' 'send-keys Up Up Up' 'copy-mode -et='"
bind -n WheelDownPane select-pane -t=\; if -Ft= "#{?pane_in_mode,1,#{mouse_any_flag}}" "send-keys -M" "send-keys Down Down Down"


bind -n WheelUpStatus previous-window
bind -n WheelDownStatus next-window

